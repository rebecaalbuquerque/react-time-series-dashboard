{"version":3,"sources":["components/Sidebar.js","components/Navbar.js","components/Footer.js","components/Metricas.js","components/MetricasReduzidas.js","utils/API.js","components/MetricasCompletas.js","components/InputsPredicoes.js","utils/FileUtils.js","components/ImportarPredicoes.js","components/GerarSeries.js","components/Spinner.js","components/Main.js","components/Init.js","components/Selecao.js","App.js","serviceWorker.js","index.js","utils/FileSaver.js"],"names":["Sidebar","props","state","gerarSeriesHabilitado","isSintetico","className","to","this","Component","Navbar","href","Footer","Metricas","seriesTemporaisMetricas","JSON","parse","localStorage","getItem","from","MetricasReduzidas","responseMetricas","map","item","key","nome","src","imagem","alt","metricas","m","metrica","nomeMetrica","valor","valorMetrica","index","axios","create","baseURL","responseType","MetricasCompletas","filtrosModelos","filtros","modelos","filtrosCategorias","categorias","filtrosItens","responseMetricasPorModelo","serieSelecionada","serieSelecionada2","filtroModeloSelecionado","modelo","filtroModeloSelecionado2","filtroCategoriaSelecionado","filtroItemSelecionado","formatTableHead","bind","formatTableBody","onItemSelected","onFiltroSelected","onFiltroAction","e","tipoFiltro","setState","target","value","concat","find","itens","data","primeiroFiltro","segundoFiltro","trackPromise","API","post","catch","error","alert","console","log","undefined","response","primeiroFiltroImagem","segundoFiltroImagem","head","forEach","push","body","serie","row","required","onChange","type","onClick","InputsPredicoes","id","onPredicoesChange","accept","placeholder","onNomeModeloChange","fileToBase64","file","Promise","resolve","reader","FileReader","onload","event","result","readAsDataURL","ImportarPredicoes","dadosReais","dadosReaisArquivo","dados","inputsPredicoes","appendInputPredicoes","onFormSubmit","onDadosReaisChange","length","preventDefault","listDataPredicoes","base64DadosReais","reject","then","resultDadosReais","predicoes","resultPredicoes","nomeModelo","predicao","setItem","stringify","files","name","initInDadosIfNotExists","onSubmit","encType","GerarSeries","ts","donwloadFiles","GridList","cellHeight","cols","GridListTile","GridListTileBar","title","titlePosition","actionPosition","zip","JSZip","csv","base64","generateAsync","content","saveAs","get","Spinner","usePromiseTracker","promiseInProgress","color","height","width","Main","path","component","Init","location","render","Selecao","clear","pathname","App","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","msSaveOrOpenBlob","view","test","userAgent","doc","URL","webkitURL","save_link","createElementNS","can_use_save_link","externalHost","webkit_req_fs","webkitRequestFileSystem","req_fs","requestFileSystem","mozRequestFileSystem","throw_outside","ex","setImmediate","setTimeout","fs_min_size","deletion_queue","process_deletion_queue","i","revokeObjectURL","remove","dispatch","filesaver","event_types","listener","call","FileSaver","blob","object_url","target_view","slice","blob_changed","get_object_url","createObjectURL","dispatch_all","split","fs_error","open","readyState","DONE","abortable","func","apply","arguments","create_if_not_found","exclusive","INIT","download","createEvent","initMouseEvent","dispatchEvent","chrome","webkitSlice","size","TEMPORARY","fs","root","getDirectory","dir","save","getFile","createWriter","writer","onwriteend","toURL","onerror","code","ABORT_ERR","write","abort","WRITING","NOT_FOUND_ERR","FS_proto","prototype","onwritestart","onprogress","onwrite","onabort","addEventListener","unload","removeEventListener","self","module","exports"],"mappings":"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","file":"static/js/main.02e10e84.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport {Link, NavLink} from 'react-router-dom'\r\n\r\nclass Sidebar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            gerarSeriesHabilitado: this.props.isSintetico ? \"\" : \"nav-item-disabled\",\r\n        };\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"sidebar\">\r\n\r\n                <div className=\"sidebar-wrapper\">\r\n                    <div className=\"logo\">\r\n                        <Link to=\"/\" className=\"simple-text\">\r\n                            TS Forecast Analysis\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <ul className=\"nav\">\r\n\r\n                        <li className={\"nav-item \" + this.state.gerarSeriesHabilitado}>\r\n                            <NavLink className=\"nav-link\" to=\"/gerarSeries\">\r\n                                <p>Gerar séries</p>\r\n                            </NavLink>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/importarPredicoes\">\r\n                                <p>Importar predições</p>\r\n                            </NavLink>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/metricas\">\r\n                                <p>Métricas</p>\r\n                            </NavLink>\r\n                        </li>\r\n                    </ul>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Sidebar","import React, {Component} from 'react'\r\n\r\nclass Navbar extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg\">\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"/\">Início</a>\r\n                </div>\r\n            </nav>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Navbar","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nclass Footer extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <footer className=\"footer\">\r\n                <div className=\"container-fluid\">\r\n                    <nav>\r\n                        <ul className=\"footer-menu\">\r\n                            <li>\r\n                                <Link to=\"/\">\r\n                                    Home\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                        <p className=\"copyright text-center\">\r\n                            © 2020\r\n                        </p>\r\n                    </nav>\r\n                </div>\r\n            </footer>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Footer","import React, {Component} from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass Metricas extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            seriesTemporaisMetricas: JSON.parse(localStorage.getItem(\"@time-series-dashboard/seriesTemporaisMetricas\"))\r\n        };\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    { this.state.seriesTemporaisMetricas == null\r\n                        ?\r\n                        <p>\r\n                            Vá em \"IMPORTAR PREDIÇÕES\" para gerar as métricas das suas séries temporais!\r\n                        </p>\r\n                        :\r\n                        <div>\r\n                            <Redirect from=\"*\" to=\"/metricasCompletas\" />\r\n                            {/*{ this.state.seriesTemporaisMetricas.responseMetricasPorModelo.length > 2\r\n                                ? <Redirect from=\"*\" to=\"/metricasCompletas\" />\r\n                                : <Redirect from=\"*\" to=\"/metricasReduzidas\" />\r\n                            }*/}\r\n                        </div>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Metricas","import React, {Component} from 'react'\r\n\r\nclass MetricasReduzidas extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            seriesTemporaisMetricas: JSON.parse(localStorage.getItem(\"@time-series-dashboard/seriesTemporaisMetricas\")).responseMetricas\r\n        };\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"content\">\r\n                <div className=\"container-fluid\">\r\n\r\n                    {this.state.seriesTemporaisMetricas.map((item) =>\r\n\r\n                        <div key={item.nome}>\r\n\r\n                            <h4>{item.nome}</h4>\r\n\r\n                            <hr/>\r\n\r\n                            <div className=\"row\">\r\n\r\n                                <div className=\"col-5\">\r\n                                    <img className=\"img-fluid\"\r\n                                         src={`data:image/jpeg;base64,${item.imagem}`}\r\n                                         alt={item.nome}/>\r\n                                </div>\r\n\r\n                                <div className=\"col-7\">\r\n\r\n                                    <table className=\"table table-bordered\">\r\n\r\n                                        <thead className=\"thead-dark\">\r\n                                        <tr>\r\n                                            {item.metricas.map((m) => m.metrica).map((nomeMetrica) =>\r\n\r\n                                                <th key={nomeMetrica}>\r\n                                                    <b>{nomeMetrica}</b>\r\n                                                </th>\r\n                                            )}\r\n                                        </tr>\r\n                                        </thead>\r\n\r\n                                        <tbody>\r\n                                        <tr>\r\n                                            {item.metricas.map((m) => m.valor).map((valorMetrica, index) =>\r\n\r\n                                                <td key={\"valorMetrica\" + index}>\r\n                                                    {valorMetrica}\r\n                                                </td>\r\n                                            )}\r\n                                        </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    )}\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default MetricasReduzidas","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: !process.env.NODE_ENV || process.env.NODE_ENV === 'development'\r\n      ? \"http://127.0.0.1:5000/\"\r\n      : \"https://tsforecastanalysisapi.herokuapp.com/\",\r\n  responseType: \"json\"\r\n});","import React, {Component} from 'react'\r\nimport API from \"../utils/API\";\r\nimport {trackPromise} from \"react-promise-tracker\";\r\n\r\nclass MetricasCompletas extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            filtrosModelos: JSON.parse(localStorage.getItem(\"@time-series-dashboard/seriesTemporaisMetricas\")).filtros.modelos,\r\n            filtrosCategorias: JSON.parse(localStorage.getItem(\"@time-series-dashboard/seriesTemporaisMetricas\")).filtros.categorias,\r\n            filtrosItens: [\"Selecione...\"],\r\n            seriesTemporaisMetricas: JSON.parse(localStorage.getItem(\"@time-series-dashboard/seriesTemporaisMetricas\")).responseMetricasPorModelo,\r\n            serieSelecionada: JSON.parse(localStorage.getItem(\"@time-series-dashboard/seriesTemporaisMetricas\")).responseMetricasPorModelo[0],\r\n            serieSelecionada2: JSON.parse(localStorage.getItem(\"@time-series-dashboard/seriesTemporaisMetricas\")).responseMetricasPorModelo[0],\r\n            filtroModeloSelecionado: JSON.parse(localStorage.getItem(\"@time-series-dashboard/seriesTemporaisMetricas\")).responseMetricasPorModelo[0].modelo,\r\n            filtroModeloSelecionado2: JSON.parse(localStorage.getItem(\"@time-series-dashboard/seriesTemporaisMetricas\")).responseMetricasPorModelo[0].modelo,\r\n            filtroCategoriaSelecionado: \"Selecione...\",\r\n            filtroItemSelecionado: \"Selecione...\"\r\n        };\r\n\r\n        this.formatTableHead = this.formatTableHead.bind(this)\r\n        this.formatTableBody = this.formatTableBody.bind(this)\r\n        this.onItemSelected = this.onItemSelected.bind(this)\r\n        this.onFiltroSelected = this.onFiltroSelected.bind(this)\r\n        this.onFiltroAction = this.onFiltroAction.bind(this)\r\n\r\n    }\r\n\r\n    onFiltroSelected(e, tipoFiltro) {\r\n\r\n        switch (tipoFiltro) {\r\n            case 'modelo1':\r\n                this.setState({ filtroModeloSelecionado: e.target.value })\r\n                break;\r\n            case 'modelo2':\r\n                this.setState({ filtroModeloSelecionado2: e.target.value })\r\n                break;\r\n            case 'categoria':\r\n\r\n                let filtros = e.target.value === \"Selecione...\" ?\r\n                    [\"Selecione...\"] :\r\n                    [\"Selecione...\"].concat(this.state.filtrosCategorias.find(item => item.nome === e.target.value).itens)\r\n\r\n                this.setState({\r\n                    filtrosItens: filtros,\r\n                    filtroCategoriaSelecionado: e.target.value\r\n                })\r\n                break;\r\n            case 'item':\r\n                this.setState({ filtroItemSelecionado: e.target.value })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    async onFiltroAction() {\r\n\r\n        if(this.state.filtroModeloSelecionado !== \"Selecione...\") {\r\n\r\n            let data = {\r\n                primeiroFiltro: {\r\n                    \"modelo\": this.state.filtroModeloSelecionado,\r\n                    \"categoria\": this.state.filtroCategoriaSelecionado === \"Selecione...\" ? null : this.state.filtroCategoriaSelecionado,\r\n                    \"item\": this.state.filtroItemSelecionado === \"Selecione...\" ? null : this.state.filtroItemSelecionado\r\n                },\r\n                segundoFiltro : {\r\n                    \"modelo\": this.state.filtroModeloSelecionado2,\r\n                    \"categoria\": this.state.filtroCategoriaSelecionado === \"Selecione...\" ? null : this.state.filtroCategoriaSelecionado,\r\n                    \"item\": this.state.filtroItemSelecionado === \"Selecione...\" ? null : this.state.filtroItemSelecionado\r\n                }\r\n            }\r\n\r\n            let response = await trackPromise(\r\n                API.post(\"/metricasFiltradas\", data)\r\n            ).catch((error) => {\r\n                alert(\"Ocorreu um erro ao tentar realizar o filtro.\")\r\n                console.log(error);\r\n            })\r\n\r\n            if(response.data !== undefined) {\r\n                this.setState({\r\n                    serieSelecionada: { imagem: response.data.primeiroFiltroImagem },\r\n                    serieSelecionada2: { imagem: response.data.segundoFiltroImagem }\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    onItemSelected(e) {\r\n        this.setState({\r\n            serieSelecionada: this.state.seriesTemporaisMetricas.find(item => item.nome === e.target.value)\r\n        })\r\n    }\r\n\r\n    formatTableHead() {\r\n        let head = [\"Nome\"]\r\n\r\n        this.state.seriesTemporaisMetricas[0].metricas.forEach((item) => {\r\n            head.push(item.metrica)\r\n        })\r\n\r\n        return head\r\n\r\n    }\r\n\r\n    formatTableBody() {\r\n        let body = []\r\n\r\n        this.state.seriesTemporaisMetricas.forEach((serie) => {\r\n            let row = []\r\n\r\n            row.push(serie.nome)\r\n\r\n            serie.metricas.forEach((item) => {\r\n                row.push(item.valor)\r\n            })\r\n\r\n            body.push(row)\r\n        })\r\n\r\n        return body\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"content\">\r\n                <div className=\"container-fluid\">\r\n\r\n                    <table className=\"table table-bordered\">\r\n\r\n                        <thead className=\"thead-dark\">\r\n                        <tr>\r\n                            {this.formatTableHead().map((nomeMetrica) =>\r\n\r\n                                <th><b>{nomeMetrica}</b></th>\r\n                            )}\r\n                        </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                        {this.formatTableBody().map((row) =>\r\n                            <tr>\r\n                                { row.map((valor) =>\r\n                                    <td>{valor}</td>\r\n                                )}\r\n                            </tr>\r\n\r\n                        )}\r\n\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <br/>\r\n\r\n                    <h3>Filtros</h3>\r\n\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-3\">\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col\">\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label>Modelo 1</label>\r\n\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            value={this.state.filtroModeloSelecionado}\r\n                                            required={true}\r\n                                            onChange={(e) => this.onFiltroSelected(e, \"modelo1\")}>\r\n\r\n                                            {this.state.filtrosModelos.map((item, index) =>\r\n                                                <option key={index + item}>{item}</option>\r\n                                            )}\r\n\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col\">\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label>Modelo 2</label>\r\n\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            value={this.state.filtroModeloSelecionado2}\r\n                                            required={true}\r\n                                            onChange={(e) => this.onFiltroSelected(e, \"modelo2\")}>\r\n\r\n                                            {this.state.filtrosModelos.map((item, index) =>\r\n                                                <option key={index + item}>{item}</option>\r\n                                            )}\r\n\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-9\">\r\n\r\n                            <div className=\"row align-items-center\">\r\n\r\n                                <div className=\"col\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Categoria</label>\r\n\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            value={this.state.filtroCategoriaSelecionado}\r\n                                            onChange={(e) => this.onFiltroSelected(e, \"categoria\")}>\r\n\r\n                                            <option key={\"selecione\"}>Selecione...</option>\r\n                                            {this.state.filtrosCategorias.map((item, index) =>\r\n                                                <option key={index + item.nome}>{item.nome}</option>\r\n                                            )}\r\n\r\n                                        </select>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Item</label>\r\n\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            value={this.state.filtroItemSelecionado}\r\n                                            onChange={(e) => this.onFiltroSelected(e, \"item\")}>\r\n\r\n                                            {this.state.filtrosItens.map((item, index) =>\r\n                                                <option key={index + item}>{item}</option>\r\n                                            )}\r\n\r\n                                        </select>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col\">\r\n                                    <div className=\"col col-align-vertical\">\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"btn-primary\"\r\n                                            onClick={this.onFiltroAction}>\r\n                                            Filtrar\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col\">\r\n\r\n                            <h3>Modelo 1</h3>\r\n\r\n                            <img className=\"img-fluid-center-horizontally\"\r\n                                 src={`data:image/jpeg;base64,${this.state.serieSelecionada.imagem}`}\r\n                                 alt={\"Série temporal 1\"}/>\r\n                        </div>\r\n\r\n                        <div className=\"col\">\r\n\r\n                            <h3>Modelo 2</h3>\r\n\r\n                            <img className=\"img-fluid-center-horizontally\"\r\n                                 src={`data:image/jpeg;base64,${this.state.serieSelecionada2.imagem}`}\r\n                                 alt={\"Série temporal 2\"}/>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default MetricasCompletas","import React, {Component} from 'react'\r\n\r\nclass InputsPredicoes extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(this.props.id)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"card card-input\">\r\n                            <label>\r\n                                <h3 className=\"card-input-title\">Predição</h3>\r\n                                <br/>\r\n                                <input type=\"file\"\r\n                                       required={true}\r\n                                       onChange={(e) => this.props.onPredicoesChange(e, this.props.id)}\r\n                                       accept=\".csv\"/>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"card card-input\">\r\n                            <label>\r\n                                <h3 className=\"card-input-title\">Modelo utilizado</h3>\r\n                                <br/>\r\n                                <input type=\"text\"\r\n                                       className=\"form-control\"\r\n                                       placeholder=\"ARIMA\"\r\n                                       required={true}\r\n                                       onChange={(e) => this.props.onNomeModeloChange(e, this.props.id)}/>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <br/>\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default InputsPredicoes","export const fileToBase64 = (file) => {\r\n    return new Promise(resolve => {\r\n        const reader = new FileReader();\r\n\r\n        // Read file content on file loaded event\r\n        reader.onload = function(event) {\r\n            resolve(event.target.result);\r\n        };\r\n\r\n        // Convert data to base64\r\n        reader.readAsDataURL(file);\r\n    });\r\n};\r\n","import React, {Component} from 'react'\r\nimport API from \"../utils/API\"\r\nimport InputsPredicoes from \"./InputsPredicoes\";\r\nimport {fileToBase64} from \"../utils/FileUtils\";\r\nimport {trackPromise} from \"react-promise-tracker\";\r\n\r\nclass ImportarPredicoes extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            dadosReais: null,\r\n            dadosReaisArquivo: null,\r\n            dados: [],\r\n            inputsPredicoes: [\r\n                <InputsPredicoes\r\n                    id={0}\r\n                    key={\"inputsPredicoes\" + 0}\r\n                    onPredicoesChange={(e, id) => this.onPredicoesChange(e, id)}\r\n                    onNomeModeloChange={(e, id) => this.onNomeModeloChange(e, id)}/>\r\n            ]\r\n        };\r\n\r\n        this.appendInputPredicoes = this.appendInputPredicoes.bind(this)\r\n        this.onFormSubmit = this.onFormSubmit.bind(this)\r\n        this.onDadosReaisChange = this.onDadosReaisChange.bind(this)\r\n        this.onPredicoesChange = this.onPredicoesChange.bind(this)\r\n        this.onNomeModeloChange = this.onNomeModeloChange.bind(this)\r\n    }\r\n\r\n    appendInputPredicoes() {\r\n\r\n        this.setState({\r\n            inputsPredicoes: [\r\n                ...this.state.inputsPredicoes,\r\n                <InputsPredicoes\r\n                    id={this.state.inputsPredicoes.length}\r\n                    key={\"inputsPredicoes\" + this.state.inputsPredicoes.length}\r\n                    onPredicoesChange={(e, id) => this.onPredicoesChange(e, id)}\r\n                    onNomeModeloChange={(e, id) => this.onNomeModeloChange(e, id)}/>\r\n            ]\r\n        })\r\n\r\n    }\r\n\r\n    onFormSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        let listDataPredicoes = []\r\n        let base64DadosReais = null\r\n\r\n        new Promise((resolve, reject) => {\r\n\r\n            fileToBase64(this.state.dadosReais).then(resultDadosReais => {\r\n\r\n                base64DadosReais = resultDadosReais\r\n\r\n                this.state.dados.forEach((item, index) => {\r\n\r\n                    fileToBase64(item.predicoes).then(resultPredicoes => {\r\n\r\n                        listDataPredicoes.push({\r\n                            nomeModelo: item.nomeModelo,\r\n                            predicao: resultPredicoes\r\n                        })\r\n\r\n                        if (index === this.state.dados.length - 1)\r\n                            resolve();\r\n                    })\r\n\r\n                })\r\n\r\n            })\r\n\r\n\r\n        }).then(() => {\r\n\r\n            trackPromise(\r\n                API\r\n                    .post(\"/metricas\", { dadosReais: base64DadosReais, dadosReaisArquivo: this.state.dadosReaisArquivo, predicoes: listDataPredicoes})\r\n                    .then(function (response) {\r\n                        localStorage.setItem(\"@time-series-dashboard/seriesTemporaisMetricas\", JSON.stringify(response.data))\r\n                        alert(\"Importação realizada com sucesso!\")\r\n                    })\r\n                    .catch(function (error) {\r\n                        alert(\"Ocorreu um erro ao tentar importar os arquivos.\")\r\n                        console.log(error);\r\n                    })\r\n            );\r\n        })\r\n\r\n\r\n    }\r\n\r\n    onDadosReaisChange(e) {\r\n        this.setState({dadosReais: e.target.files[0]})\r\n\r\n        if(e.target.files[0] != null)\r\n            this.setState({dadosReaisArquivo: e.target.files[0].name})\r\n    }\r\n\r\n    onPredicoesChange(e, id) {\r\n        this.initInDadosIfNotExists(id)\r\n        this.state.dados[id].predicoes = e.target.files[0]\r\n    }\r\n\r\n    onNomeModeloChange(e, id) {\r\n        this.initInDadosIfNotExists(id)\r\n        this.state.dados[id].nomeModelo = e.target.value\r\n    }\r\n\r\n    initInDadosIfNotExists(id) {\r\n\r\n        console.log(\"Tentando adicionar \" + id)\r\n        console.log(this.state.dados)\r\n\r\n        if (this.state.dados.find(item => item.id === id) == null) {\r\n\r\n            this.state.dados.push(\r\n                {\r\n                    id: id,\r\n                    nomeModelo: \"\",\r\n                    predicoes: null\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content\">\r\n\r\n                <div className=\"container-fluid\">\r\n\r\n                    <form id=\"form-importar-predicoes\" onSubmit={this.onFormSubmit} encType=\"multipart/form-data\">\r\n\r\n                        <div className=\"card card-input\">\r\n                            <label>\r\n                                <h3 className=\"card-input-title\">Dados reais</h3>\r\n                                <br/>\r\n                                <input type=\"file\"\r\n                                       required={true}\r\n                                       onChange={this.onDadosReaisChange}\r\n                                       accept=\".csv\"/>\r\n                            </label>\r\n                        </div>\r\n\r\n                        {this.state.inputsPredicoes.map((item => item))}\r\n\r\n                        <input className=\"btn-centralized btn-primary\" type=\"submit\" value=\"Enviar\"/>\r\n\r\n                    </form>\r\n\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn-centralized btn-primary\"\r\n                        onClick={this.appendInputPredicoes}>\r\n                        Adicionar novos dados\r\n                    </button>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ImportarPredicoes","import React, {Component} from 'react'\r\nimport {GridList, GridListTile} from '@material-ui/core';\r\nimport API from \"../utils/API\"\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport JSZip from \"jszip\";\r\nimport saveAs from \"../utils/FileSaver\"\r\nimport { trackPromise} from 'react-promise-tracker';\r\n\r\nclass GerarSeries extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ts: []\r\n        };\r\n\r\n        this.donwloadFiles = this.donwloadFiles.bind(this);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"content\">\r\n                <div className=\"container-fluid\">\r\n\r\n                    <button type=\"button\" className=\"btn-primary btn-centralized\" onClick={this.donwloadFiles}>Baixar séries temporais</button>\r\n\r\n                    <GridList className=\"grid-list-title\" cellHeight={\"auto\"} cols={2}>\r\n                        { this.state.ts.map((item) => (\r\n                            <GridListTile key={item.nome}>\r\n                                <img src={`data:image/jpeg;base64,${item.imagem}`} alt={item.nome} />\r\n\r\n                                <GridListTileBar\r\n                                    title={item.nome}\r\n                                    titlePosition=\"top\"\r\n                                    actionPosition=\"left\"\r\n                                    className=\"grid-list-title-bar\"\r\n                                />\r\n                            </GridListTile>\r\n                        ))}\r\n                    </GridList>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    donwloadFiles() {\r\n        if(this.state.ts == null || this.state.ts.length === 0) {\r\n            alert(\"Espere as séries temporais serem carregadas.\")\r\n            return;\r\n        }\r\n\r\n        const zip = new JSZip();\r\n\r\n        this.state.ts.forEach(function(item) {\r\n            zip.file(item.nome + \".csv\", item.csv, {base64: true});\r\n        });\r\n\r\n        zip.generateAsync({type:\"blob\"}).then(function(content) {\r\n            saveAs(content, \"séries temporais.zip\")\r\n        });\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        let response = await trackPromise(API.get(\"seriesTemporaisSinteticas\"))\r\n\r\n        this.setState({\r\n            ...this.state, ...{\r\n                ts: response.data\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default GerarSeries","import React from \"react\";\r\nimport { usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport const Spinner = (props) => {\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    return (\r\n        promiseInProgress && (\r\n            <div className=\"spinner\">\r\n                <Loader type=\"ThreeDots\" color=\"#313131\" height=\"100\" width=\"100\" />\r\n            </div>\r\n        )\r\n    );\r\n};\r\n\r\n","import React, { Component } from 'react'\r\nimport Navbar from \"./Navbar\"\r\nimport Footer from \"./Footer\"\r\nimport { Switch, Route, Redirect } from \"react-router-dom\"\r\nimport Metricas from \"./Metricas\"\r\nimport MetricasReduzidas from \"./MetricasReduzidas\"\r\nimport MetricasCompletas from \"./MetricasCompletas\"\r\nimport ImportarPredicoes from \"./ImportarPredicoes\"\r\nimport GerarSeries from \"./GerarSeries\";\r\nimport {Spinner} from \"./Spinner\";\r\n\r\nclass Main extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"main-panel\">\r\n                <Navbar />\r\n                <Spinner/>\r\n                <Switch>\r\n                    <Route path=\"/gerarSeries\" component={GerarSeries} />\r\n                    <Route path=\"/importarPredicoes\" component={ImportarPredicoes} />\r\n                    <Route path=\"/metricas\" component={Metricas} />\r\n                    <Route path=\"/metricasReduzidas\" component={MetricasReduzidas} />\r\n                    <Route path=\"/metricasCompletas\" component={MetricasCompletas} />\r\n\r\n                    {this.props.isSintetico\r\n                        ? <Redirect from=\"*\" to=\"/gerarSeries\" />\r\n                        : <Redirect from=\"*\" to=\"/importarPredicoes\" />\r\n                    }\r\n\r\n                </Switch>\r\n                <Footer />\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Main","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport Sidebar from './Sidebar'\r\nimport Main from './Main'\r\n\r\nclass Init extends Component {\r\n\r\n    render() {\r\n        const { data } = this.props.location\r\n\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <Router>\r\n                    <Sidebar isSintetico={data.isSintetico} />\r\n                    <Route\r\n                        path=\"/\"\r\n                        render={(props) => (\r\n                            <Main {...props} isSintetico={data.isSintetico} />\r\n                        )} />\r\n                </Router>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Init;","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\"\r\n\r\nclass Selecao extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        localStorage.clear()\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content\">\r\n                <div className=\"vertical-center\">\r\n                    <ul className=\"ul-without-bullets\">\r\n                        <li>\r\n                            <Link to={{pathname: \"/init\", data: {isSintetico: true}}}>\r\n                                <button type=\"button\" className=\"btn-primary\">Dados sintéticos</button>\r\n                            </Link>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <Link to={{pathname: \"/init\", data: {isSintetico: false}}}>\r\n                                <button type=\"button\" className=\"btn-primary\">Dados reais</button>\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Selecao;\r\n","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Redirect, Route, Switch} from 'react-router-dom'\nimport Init from './components/Init'\nimport Selecao from './components/Selecao'\n\nclass App extends Component {\n  render() {\n    return (\n\n        <Router>\n          <Switch>\n            <Route path=\"/init\" component={Init} />\n            <Route path=\"/selecao\" component={Selecao} />\n            <Redirect from=\"*\" to=\"/selecao\" />\n          </Switch>\n        </Router>\n\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './assets/css/bootstrap.min.css'\nimport './assets/css/light-bootstrap-dashboard.css'\nimport './assets/css/dashboard.css'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/*! FileSaver.js\n *  A saveAs() FileSaver implementation.\n *  2014-01-24\n *\n *  By Eli Grey, http://eligrey.com\n *  License: X11/MIT\n *    See LICENSE.md\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = saveAs\n  // IE 10+ (native saveAs)\n  || (typeof navigator !== \"undefined\" &&\n      navigator.msSaveOrOpenBlob && navigator.msSaveOrOpenBlob.bind(navigator))\n  // Everyone else\n  || (function(view) {\n\t\"use strict\";\n\t// IE <10 is explicitly unsupported\n\tif (typeof navigator !== \"undefined\" &&\n\t    /MSIE [1-9]\\./.test(navigator.userAgent)) {\n\t\treturn;\n\t}\n\tvar\n\t\t  doc = view.document\n\t\t  // only get URL when necessary in case BlobBuilder.js hasn't overridden it yet\n\t\t, get_URL = function() {\n\t\t\treturn view.URL || view.webkitURL || view;\n\t\t}\n\t\t, URL = view.URL || view.webkitURL || view\n\t\t, save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t, can_use_save_link = !view.externalHost && \"download\" in save_link\n\t\t, click = function(node) {\n\t\t\tvar event = doc.createEvent(\"MouseEvents\");\n\t\t\tevent.initMouseEvent(\n\t\t\t\t\"click\", true, false, view, 0, 0, 0, 0, 0\n\t\t\t\t, false, false, false, false, 0, null\n\t\t\t);\n\t\t\tnode.dispatchEvent(event);\n\t\t}\n\t\t, webkit_req_fs = view.webkitRequestFileSystem\n\t\t, req_fs = view.requestFileSystem || webkit_req_fs || view.mozRequestFileSystem\n\t\t, throw_outside = function(ex) {\n\t\t\t(view.setImmediate || view.setTimeout)(function() {\n\t\t\t\tthrow ex;\n\t\t\t}, 0);\n\t\t}\n\t\t, force_saveable_type = \"application/octet-stream\"\n\t\t, fs_min_size = 0\n\t\t, deletion_queue = []\n\t\t, process_deletion_queue = function() {\n\t\t\tvar i = deletion_queue.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar file = deletion_queue[i];\n\t\t\t\tif (typeof file === \"string\") { // file is an object URL\n\t\t\t\t\tURL.revokeObjectURL(file);\n\t\t\t\t} else { // file is a File\n\t\t\t\t\tfile.remove();\n\t\t\t\t}\n\t\t\t}\n\t\t\tdeletion_queue.length = 0; // clear queue\n\t\t}\n\t\t, dispatch = function(filesaver, event_types, event) {\n\t\t\tevent_types = [].concat(event_types);\n\t\t\tvar i = event_types.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar listener = filesaver[\"on\" + event_types[i]];\n\t\t\t\tif (typeof listener === \"function\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlistener.call(filesaver, event || filesaver);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t, FileSaver = function(blob, name) {\n\t\t\t// First try a.download, then web filesystem, then object URLs\n\t\t\tvar\n\t\t\t\t  filesaver = this\n\t\t\t\t, type = blob.type\n\t\t\t\t, blob_changed = false\n\t\t\t\t, object_url\n\t\t\t\t, target_view\n\t\t\t\t, get_object_url = function() {\n\t\t\t\t\tvar object_url = get_URL().createObjectURL(blob);\n\t\t\t\t\tdeletion_queue.push(object_url);\n\t\t\t\t\treturn object_url;\n\t\t\t\t}\n\t\t\t\t, dispatch_all = function() {\n\t\t\t\t\tdispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n\t\t\t\t}\n\t\t\t\t// on any filesys errors revert to saving with object URLs\n\t\t\t\t, fs_error = function() {\n\t\t\t\t\t// don't create more object URLs than needed\n\t\t\t\t\tif (blob_changed || !object_url) {\n\t\t\t\t\t\tobject_url = get_object_url(blob);\n\t\t\t\t\t}\n\t\t\t\t\tif (target_view) {\n\t\t\t\t\t\ttarget_view.location.href = object_url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\twindow.open(object_url, \"_blank\");\n\t\t\t\t\t}\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\tdispatch_all();\n\t\t\t\t}\n\t\t\t\t, abortable = function(func) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif (filesaver.readyState !== filesaver.DONE) {\n\t\t\t\t\t\t\treturn func.apply(this, arguments);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t, create_if_not_found = {create: true, exclusive: false}\n\t\t\t\t, slice\n\t\t\t;\n\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\tif (!name) {\n\t\t\t\tname = \"download\";\n\t\t\t}\n\t\t\tif (can_use_save_link) {\n\t\t\t\tobject_url = get_object_url(blob);\n\t\t\t\t// FF for Android has a nasty garbage collection mechanism\n\t\t\t\t// that turns all objects that are not pure javascript into 'deadObject'\n\t\t\t\t// this means `doc` and `save_link` are unusable and need to be recreated\n\t\t\t\t// `view` is usable though:\n\t\t\t\tdoc = view.document;\n\t\t\t\tsave_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\");\n\t\t\t\tsave_link.href = object_url;\n\t\t\t\tsave_link.download = name;\n\t\t\t\tvar event = doc.createEvent(\"MouseEvents\");\n\t\t\t\tevent.initMouseEvent(\n\t\t\t\t\t\"click\", true, false, view, 0, 0, 0, 0, 0\n\t\t\t\t\t, false, false, false, false, 0, null\n\t\t\t\t);\n\t\t\t\tsave_link.dispatchEvent(event);\n\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\tdispatch_all();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Object and web filesystem URLs have a problem saving in Google Chrome when\n\t\t\t// viewed in a tab, so I force save with application/octet-stream\n\t\t\t// http://code.google.com/p/chromium/issues/detail?id=91158\n\t\t\tif (view.chrome && type && type !== force_saveable_type) {\n\t\t\t\tslice = blob.slice || blob.webkitSlice;\n\t\t\t\tblob = slice.call(blob, 0, blob.size, force_saveable_type);\n\t\t\t\tblob_changed = true;\n\t\t\t}\n\t\t\t// Since I can't be sure that the guessed media type will trigger a download\n\t\t\t// in WebKit, I append .download to the filename.\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=65440\n\t\t\tif (webkit_req_fs && name !== \"download\") {\n\t\t\t\tname += \".download\";\n\t\t\t}\n\t\t\tif (type === force_saveable_type || webkit_req_fs) {\n\t\t\t\ttarget_view = view;\n\t\t\t}\n\t\t\tif (!req_fs) {\n\t\t\t\tfs_error();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfs_min_size += blob.size;\n\t\t\treq_fs(view.TEMPORARY, fs_min_size, abortable(function(fs) {\n\t\t\t\tfs.root.getDirectory(\"saved\", create_if_not_found, abortable(function(dir) {\n\t\t\t\t\tvar save = function() {\n\t\t\t\t\t\tdir.getFile(name, create_if_not_found, abortable(function(file) {\n\t\t\t\t\t\t\tfile.createWriter(abortable(function(writer) {\n\t\t\t\t\t\t\t\twriter.onwriteend = function(event) {\n\t\t\t\t\t\t\t\t\ttarget_view.location.href = file.toURL();\n\t\t\t\t\t\t\t\t\tdeletion_queue.push(file);\n\t\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\t\t\tdispatch(filesaver, \"writeend\", event);\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\twriter.onerror = function() {\n\t\t\t\t\t\t\t\t\tvar error = writer.error;\n\t\t\t\t\t\t\t\t\tif (error.code !== error.ABORT_ERR) {\n\t\t\t\t\t\t\t\t\t\tfs_error();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\"writestart progress write abort\".split(\" \").forEach(function(event) {\n\t\t\t\t\t\t\t\t\twriter[\"on\" + event] = filesaver[\"on\" + event];\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\twriter.write(blob);\n\t\t\t\t\t\t\t\tfilesaver.abort = function() {\n\t\t\t\t\t\t\t\t\twriter.abort();\n\t\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.WRITING;\n\t\t\t\t\t\t\t}), fs_error);\n\t\t\t\t\t\t}), fs_error);\n\t\t\t\t\t};\n\t\t\t\t\tdir.getFile(name, {create: false}, abortable(function(file) {\n\t\t\t\t\t\t// delete file if it already exists\n\t\t\t\t\t\tfile.remove();\n\t\t\t\t\t\tsave();\n\t\t\t\t\t}), abortable(function(ex) {\n\t\t\t\t\t\tif (ex.code === ex.NOT_FOUND_ERR) {\n\t\t\t\t\t\t\tsave();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfs_error();\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t}), fs_error);\n\t\t\t}), fs_error);\n\t\t}\n\t\t, FS_proto = FileSaver.prototype\n\t\t, saveAs = function(blob, name) {\n\t\t\treturn new FileSaver(blob, name);\n\t\t}\n\t;\n\tFS_proto.abort = function() {\n\t\tvar filesaver = this;\n\t\tfilesaver.readyState = filesaver.DONE;\n\t\tdispatch(filesaver, \"abort\");\n\t};\n\tFS_proto.readyState = FS_proto.INIT = 0;\n\tFS_proto.WRITING = 1;\n\tFS_proto.DONE = 2;\n\n\tFS_proto.error =\n\tFS_proto.onwritestart =\n\tFS_proto.onprogress =\n\tFS_proto.onwrite =\n\tFS_proto.onabort =\n\tFS_proto.onerror =\n\tFS_proto.onwriteend =\n\t\tnull;\n\n\tview.addEventListener(\"unload\", process_deletion_queue, false);\n\tsaveAs.unload = function() {\n\t\tprocess_deletion_queue();\n\t\tview.removeEventListener(\"unload\", process_deletion_queue, false);\n\t};\n\treturn saveAs;\n}(\n\t   typeof window.self !== \"undefined\" && window.self\n\t|| typeof window !== \"undefined\" && window\n\t|| this.content\n));\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\nif (typeof module !== \"undefined\") module.exports = saveAs;\n"],"sourceRoot":""}